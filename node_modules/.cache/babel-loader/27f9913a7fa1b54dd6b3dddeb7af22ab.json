{"ast":null,"code":"var _jsxFileName = \"F:\\\\restaurant\\\\src\\\\shared\\\\dishes.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardBody, CardText, CardTitle } from 'reactstrap';\n\nclass Dishdetails extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderDish(dish) {\n    if (dish != null) return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      top: true,\n      src: dish.image,\n      alt: dish.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }\n    }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }\n    }, dish.description))));else return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    });\n  }\n\n  renderComments(comments) {\n    if (comments == null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 14\n        }\n      });\n    }\n\n    const cmnts = comments.map(comment => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: comment.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, comment.comment), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, \"-- \", comment.author, \", \\xA0\", new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: '2-digit'\n      }).format(new Date(comment.date))));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \" Comments \"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, cmnts));\n  }\n\n  render() {\n    if (this.props.dish == null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, this.renderDish(this.props.dish), this.renderComments(this.props.dish.comments));\n  }\n\n}\n\nexport default Dishdetails;","map":{"version":3,"sources":["F:/restaurant/src/shared/dishes.js"],"names":["React","Component","Card","CardImg","CardBody","CardText","CardTitle","Dishdetails","constructor","props","renderDish","dish","image","name","description","renderComments","comments","cmnts","map","comment","id","author","Intl","DateTimeFormat","year","month","day","format","Date","date","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardImg, CardBody, CardText, CardTitle } from 'reactstrap';\r\n\r\nclass Dishdetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  renderDish(dish) {\r\n    if (dish != null)\r\n      return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n          <Card>\r\n            <CardImg top src={dish.image} alt={dish.name} />\r\n            <CardBody>\r\n              <CardTitle>{dish.name}</CardTitle>\r\n              <CardText>{dish.description}</CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      );\r\n    else return <div></div>;\r\n  }\r\n\r\n  renderComments(comments) {\r\n    if (comments == null) {\r\n      return <div></div>;\r\n    }\r\n    const cmnts = comments.map((comment) => {\r\n      return (\r\n        <li key={comment.id}>\r\n          <p>{comment.comment}</p>\r\n          <p>\r\n            -- {comment.author}, &nbsp;\r\n            {new Intl.DateTimeFormat('en-US', {\r\n              year: 'numeric',\r\n              month: 'long',\r\n              day: '2-digit',\r\n            }).format(new Date(comment.date))}\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <h4> Comments </h4>\r\n        <ul className=\"list-unstyled\">{cmnts}</ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.props.dish == null) {\r\n      return <div></div>;\r\n    }\r\n    return (\r\n      <div className=\"row\">\r\n        {this.renderDish(this.props.dish)}\r\n        {this.renderComments(this.props.dish.comments)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dishdetails;"]},"metadata":{},"sourceType":"module"}